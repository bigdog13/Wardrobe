@model Wardrobe.ViewController.OutfitViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Outfit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.OutfitName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Outfit.OutfitName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Outfit.OutfitName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.TopOutfitID, "TopOutfitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("TopOutfitID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.Outfit.TopOutfitID, (SelectList)ViewBag.TopId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Outfit.TopOutfitID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.BottomOutfitID, "BottomOutfitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Outfit.BottomOutfitID, (SelectList)ViewBag.BottomId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Outfit.BottomOutfitID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.ShoeOutfitID, "ShoeOutfitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Outfit.ShoeOutfitID, (SelectList)ViewBag.ShoeId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Outfit.ShoeOutfitID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.SeasonOutfitID, "SeasonOutfitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Outfit.SeasonOutfitID, (SelectList)ViewBag.SeasonOutfitID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Outfit.SeasonOutfitID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Outfit.OccasionOutfitID, "OccasionOutfitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Outfit.OccasionOutfitID, (SelectList)ViewBag.OccasionOutfitID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Outfit.OccasionOutfitID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedAccessories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedAccessories, Model.AllAccessories)
            </div>

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
        </div>

        
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
